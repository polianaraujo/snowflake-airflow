{"timestamp":"2025-07-29T20:04:45.696931","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-29T20:04:45.697840","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/2_python_operator_v1.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-29T20:04:45.743494Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.743713Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.743974Z","level":"info","event":"Current task name:python","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.744044Z","level":"info","event":"Dag name:python_operator_v1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.746276Z","level":"info","event":"poliana","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.747241Z","level":"info","event":"{'conn': <ConnectionAccessor (dynamic access)>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.747417Z","level":"info","event":" 'dag': <DAG: python_operator_v1>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.747551Z","level":"info","event":" 'dag_run': DagRun(dag_id='python_operator_v1', run_id='scheduled__2023-06-24T18:48:00+00:00', logical_date=datetime.datetime(2023, 6, 24, 18, 48, tzinfo=datetime.timezone.utc), data_interval_start=datetime.datetime(2023, 6, 24, 18, 48, tzinfo=datetime.timezone.utc), data_interval_end=datetime.datetime(2023, 6, 24, 18, 48, tzinfo=datetime.timezone.utc), run_after=datetime.datetime(2023, 6, 24, 18, 48, tzinfo=datetime.timezone.utc), start_date=datetime.datetime(2025, 7, 29, 20, 4, 44, 375976, tzinfo=datetime.timezone.utc), end_date=None, clear_number=0, run_type=<DagRunType.SCHEDULED: 'scheduled'>, conf={}, consumed_asset_events=[]),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.747610Z","level":"info","event":" 'data_interval_end': DateTime(2023, 6, 24, 18, 48, 0, tzinfo=Timezone('UTC')),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.747656Z","level":"info","event":" 'data_interval_start': DateTime(2023, 6, 24, 18, 48, 0, tzinfo=Timezone('UTC')),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.747699Z","level":"info","event":" 'ds': '2023-06-24',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.747749Z","level":"info","event":" 'ds_nodash': '20230624',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.747791Z","level":"info","event":" 'inlet_events': InletEventsAccessors(_inlets=[], _assets={}, _asset_aliases={}),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.747832Z","level":"info","event":" 'inlets': [],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.747873Z","level":"info","event":" 'logical_date': DateTime(2023, 6, 24, 18, 48, 0, tzinfo=Timezone('UTC')),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.747913Z","level":"info","event":" 'macros': <MacrosAccessor (dynamic access to macros)>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.747954Z","level":"info","event":" 'map_index_template': None,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.747996Z","level":"info","event":" 'outlet_events': <airflow.sdk.execution_time.context.OutletEventAccessors object at 0x7fb67797fa70>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.748038Z","level":"info","event":" 'outlets': [],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.748079Z","level":"info","event":" 'params': {},","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.763874Z","level":"info","event":" 'prev_data_interval_end_success': <Proxy at 0x7fb66fc17b30 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x7fb66fc35940>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.764090Z","level":"info","event":" 'prev_data_interval_start_success': <Proxy at 0x7fb66fc17a70 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x7fb66fc37060>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.764216Z","level":"info","event":" 'prev_end_date_success': <Proxy at 0x7fb66fc17f20 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x7fb66fc37100>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.764300Z","level":"info","event":" 'prev_start_date_success': <Proxy at 0x7fb66fc15af0 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x7fb66fc35e40>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.764374Z","level":"info","event":" 'run_id': 'scheduled__2023-06-24T18:48:00+00:00',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.764440Z","level":"info","event":" 'task': <Task(PythonOperator): python>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.764521Z","level":"info","event":" 'task_instance': RuntimeTaskInstance(id=UUID('019857c9-90b6-7bf0-94d7-31af3158f8f1'), task_id='python', dag_id='python_operator_v1', run_id='scheduled__2023-06-24T18:48:00+00:00', try_number=1, map_index=-1, hostname='bf6f1e7a6f11', context_carrier={}, task=<Task(PythonOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 7, 29, 20, 4, 45, 25897, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/python_operator_v1/runs/scheduled__2023-06-24T18%3A48%3A00%2B00%3A00/tasks/python?try_number=1'),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.764595Z","level":"info","event":" 'task_instance_key_str': 'python_operator_v1__python__20230624',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.764665Z","level":"info","event":" 'task_reschedule_count': 0,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.764738Z","level":"info","event":" 'templates_dict': None,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.764861Z","level":"info","event":" 'ti': RuntimeTaskInstance(id=UUID('019857c9-90b6-7bf0-94d7-31af3158f8f1'), task_id='python', dag_id='python_operator_v1', run_id='scheduled__2023-06-24T18:48:00+00:00', try_number=1, map_index=-1, hostname='bf6f1e7a6f11', context_carrier={}, task=<Task(PythonOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 7, 29, 20, 4, 45, 25897, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/python_operator_v1/runs/scheduled__2023-06-24T18%3A48%3A00%2B00%3A00/tasks/python?try_number=1'),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.764916Z","level":"info","event":" 'triggering_asset_events': TriggeringAssetEventsAccessor(_events=defaultdict(<class 'list'>, {})),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.764983Z","level":"info","event":" 'ts': '2023-06-24T18:48:00+00:00',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.765052Z","level":"info","event":" 'ts_nodash': '20230624T184800',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.765124Z","level":"info","event":" 'ts_nodash_with_tz': '20230624T184800+0000',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.765192Z","level":"info","event":" 'var': {'json': <VariableAccessor (dynamic access)>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.765238Z","level":"info","event":"         'value': <VariableAccessor (dynamic access)>}}","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.764847","level":"info","event":"Done. Returned value was: 123","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-29T20:04:45.765056","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('019857c9-90b6-7bf0-94d7-31af3158f8f1'), task_id='python', dag_id='python_operator_v1', run_id='scheduled__2023-06-24T18:48:00+00:00', try_number=1, map_index=-1, hostname='bf6f1e7a6f11', context_carrier={}, task=<Task(PythonOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 7, 29, 20, 4, 45, 25897, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/python_operator_v1/runs/scheduled__2023-06-24T18%3A48%3A00%2B00%3A00/tasks/python?try_number=1')","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.791268Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.791410Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.791594Z","level":"info","event":"Task operator:<Task(PythonOperator): python>","chan":"stdout","logger":"task"}
