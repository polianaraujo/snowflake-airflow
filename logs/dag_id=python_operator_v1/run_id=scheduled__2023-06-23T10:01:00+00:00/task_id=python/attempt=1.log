{"timestamp":"2025-07-29T19:33:32.931191","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-29T19:33:32.931703","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/python_operator_v1.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-29T19:33:32.964373Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.964605Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.965699Z","level":"info","event":"Current task name:python","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.965923Z","level":"info","event":"Dag name:python_operator_v1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.967407Z","level":"info","event":"poliana","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.968276Z","level":"info","event":"{'conn': <ConnectionAccessor (dynamic access)>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.968409Z","level":"info","event":" 'dag': <DAG: python_operator_v1>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.968522Z","level":"info","event":" 'dag_run': DagRun(dag_id='python_operator_v1', run_id='scheduled__2023-06-23T10:01:00+00:00', logical_date=datetime.datetime(2023, 6, 23, 10, 1, tzinfo=datetime.timezone.utc), data_interval_start=datetime.datetime(2023, 6, 23, 10, 1, tzinfo=datetime.timezone.utc), data_interval_end=datetime.datetime(2023, 6, 23, 10, 1, tzinfo=datetime.timezone.utc), run_after=datetime.datetime(2023, 6, 23, 10, 1, tzinfo=datetime.timezone.utc), start_date=datetime.datetime(2025, 7, 29, 19, 33, 32, 243552, tzinfo=datetime.timezone.utc), end_date=None, clear_number=0, run_type=<DagRunType.SCHEDULED: 'scheduled'>, conf={}, consumed_asset_events=[]),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.968607Z","level":"info","event":" 'data_interval_end': DateTime(2023, 6, 23, 10, 1, 0, tzinfo=Timezone('UTC')),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.968716Z","level":"info","event":" 'data_interval_start': DateTime(2023, 6, 23, 10, 1, 0, tzinfo=Timezone('UTC')),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.968793Z","level":"info","event":" 'ds': '2023-06-23',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.968864Z","level":"info","event":" 'ds_nodash': '20230623',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.968932Z","level":"info","event":" 'inlet_events': InletEventsAccessors(_inlets=[], _assets={}, _asset_aliases={}),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.969012Z","level":"info","event":" 'inlets': [],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.969083Z","level":"info","event":" 'logical_date': DateTime(2023, 6, 23, 10, 1, 0, tzinfo=Timezone('UTC')),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.969151Z","level":"info","event":" 'macros': <MacrosAccessor (dynamic access to macros)>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.969221Z","level":"info","event":" 'map_index_template': None,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.969283Z","level":"info","event":" 'outlet_events': <airflow.sdk.execution_time.context.OutletEventAccessors object at 0x7fb677adce30>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.969331Z","level":"info","event":" 'outlets': [],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.969372Z","level":"info","event":" 'params': {},","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.984343Z","level":"info","event":" 'prev_data_interval_end_success': <Proxy at 0x7fb66fcb0200 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x7fb66fc9d300>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.985279Z","level":"info","event":" 'prev_data_interval_start_success': <Proxy at 0x7fb66fcb0320 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x7fb66fc9ea20>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.985468Z","level":"info","event":" 'prev_end_date_success': <Proxy at 0x7fb66fcb0440 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x7fb66fc9eac0>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.985566Z","level":"info","event":" 'prev_start_date_success': <Proxy at 0x7fb66fcb0350 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x7fb66fc9d800>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.985645Z","level":"info","event":" 'run_id': 'scheduled__2023-06-23T10:01:00+00:00',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.985730Z","level":"info","event":" 'task': <Task(PythonOperator): python>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.985834Z","level":"info","event":" 'task_instance': RuntimeTaskInstance(id=UUID('019857ac-ffd0-75a2-9bdf-771da84074cd'), task_id='python', dag_id='python_operator_v1', run_id='scheduled__2023-06-23T10:01:00+00:00', try_number=1, map_index=-1, hostname='bf6f1e7a6f11', context_carrier={}, task=<Task(PythonOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 7, 29, 19, 33, 32, 421516, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/python_operator_v1/runs/scheduled__2023-06-23T10%3A01%3A00%2B00%3A00/tasks/python?try_number=1'),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.985920Z","level":"info","event":" 'task_instance_key_str': 'python_operator_v1__python__20230623',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.985998Z","level":"info","event":" 'task_reschedule_count': 0,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.986072Z","level":"info","event":" 'templates_dict': None,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.986152Z","level":"info","event":" 'ti': RuntimeTaskInstance(id=UUID('019857ac-ffd0-75a2-9bdf-771da84074cd'), task_id='python', dag_id='python_operator_v1', run_id='scheduled__2023-06-23T10:01:00+00:00', try_number=1, map_index=-1, hostname='bf6f1e7a6f11', context_carrier={}, task=<Task(PythonOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 7, 29, 19, 33, 32, 421516, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/python_operator_v1/runs/scheduled__2023-06-23T10%3A01%3A00%2B00%3A00/tasks/python?try_number=1'),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.986231Z","level":"info","event":" 'triggering_asset_events': TriggeringAssetEventsAccessor(_events=defaultdict(<class 'list'>, {})),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.986308Z","level":"info","event":" 'ts': '2023-06-23T10:01:00+00:00',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.986385Z","level":"info","event":" 'ts_nodash': '20230623T100100',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.986454Z","level":"info","event":" 'ts_nodash_with_tz': '20230623T100100+0000',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.986501Z","level":"info","event":" 'var': {'json': <VariableAccessor (dynamic access)>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.986544Z","level":"info","event":"         'value': <VariableAccessor (dynamic access)>}}","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:32.985883","level":"info","event":"Done. Returned value was: 123","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-29T19:33:32.986129","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('019857ac-ffd0-75a2-9bdf-771da84074cd'), task_id='python', dag_id='python_operator_v1', run_id='scheduled__2023-06-23T10:01:00+00:00', try_number=1, map_index=-1, hostname='bf6f1e7a6f11', context_carrier={}, task=<Task(PythonOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 7, 29, 19, 33, 32, 421516, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/python_operator_v1/runs/scheduled__2023-06-23T10%3A01%3A00%2B00%3A00/tasks/python?try_number=1')","logger":"task"}
{"timestamp":"2025-07-29T19:33:33.012942Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:33.013084Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:33:33.013273Z","level":"info","event":"Task operator:<Task(PythonOperator): python>","chan":"stdout","logger":"task"}
