{"timestamp":"2025-07-29T19:56:57.033118","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-29T19:56:57.033626","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/2_python_operator_v1.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-29T19:56:57.062207Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.062382Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.062824Z","level":"info","event":"Current task name:python","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.062936Z","level":"info","event":"Dag name:python_operator_v1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.064079Z","level":"info","event":"poliana","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.064712Z","level":"info","event":"{'conn': <ConnectionAccessor (dynamic access)>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.064841Z","level":"info","event":" 'dag': <DAG: python_operator_v1>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.064984Z","level":"info","event":" 'dag_run': DagRun(dag_id='python_operator_v1', run_id='scheduled__2023-06-24T11:25:00+00:00', logical_date=datetime.datetime(2023, 6, 24, 11, 25, tzinfo=datetime.timezone.utc), data_interval_start=datetime.datetime(2023, 6, 24, 11, 25, tzinfo=datetime.timezone.utc), data_interval_end=datetime.datetime(2023, 6, 24, 11, 25, tzinfo=datetime.timezone.utc), run_after=datetime.datetime(2023, 6, 24, 11, 25, tzinfo=datetime.timezone.utc), start_date=datetime.datetime(2025, 7, 29, 19, 56, 56, 80628, tzinfo=datetime.timezone.utc), end_date=None, clear_number=0, run_type=<DagRunType.SCHEDULED: 'scheduled'>, conf={}, consumed_asset_events=[]),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.065110Z","level":"info","event":" 'data_interval_end': DateTime(2023, 6, 24, 11, 25, 0, tzinfo=Timezone('UTC')),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.065189Z","level":"info","event":" 'data_interval_start': DateTime(2023, 6, 24, 11, 25, 0, tzinfo=Timezone('UTC')),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.065255Z","level":"info","event":" 'ds': '2023-06-24',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.065320Z","level":"info","event":" 'ds_nodash': '20230624',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.065383Z","level":"info","event":" 'inlet_events': InletEventsAccessors(_inlets=[], _assets={}, _asset_aliases={}),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.065446Z","level":"info","event":" 'inlets': [],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.065515Z","level":"info","event":" 'logical_date': DateTime(2023, 6, 24, 11, 25, 0, tzinfo=Timezone('UTC')),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.065590Z","level":"info","event":" 'macros': <MacrosAccessor (dynamic access to macros)>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.065661Z","level":"info","event":" 'map_index_template': None,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.065739Z","level":"info","event":" 'outlet_events': <airflow.sdk.execution_time.context.OutletEventAccessors object at 0x7fb677b47a70>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.065794Z","level":"info","event":" 'outlets': [],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.065847Z","level":"info","event":" 'params': {},","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.078966Z","level":"info","event":" 'prev_data_interval_end_success': <Proxy at 0x7fb66fdeb710 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x7fb66fc120c0>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.079227Z","level":"info","event":" 'prev_data_interval_start_success': <Proxy at 0x7fb66fdea360 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x7fb66fc137e0>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.079350Z","level":"info","event":" 'prev_end_date_success': <Proxy at 0x7fb66fee6990 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x7fb66fc13880>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.079419Z","level":"info","event":" 'prev_start_date_success': <Proxy at 0x7fb66febafc0 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x7fb66fc125c0>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.079486Z","level":"info","event":" 'run_id': 'scheduled__2023-06-24T11:25:00+00:00',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.079543Z","level":"info","event":" 'task': <Task(PythonOperator): python>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.079617Z","level":"info","event":" 'task_instance': RuntimeTaskInstance(id=UUID('019857c2-6b86-70f0-8021-fae4762beb8e'), task_id='python', dag_id='python_operator_v1', run_id='scheduled__2023-06-24T11:25:00+00:00', try_number=1, map_index=-1, hostname='bf6f1e7a6f11', context_carrier={}, task=<Task(PythonOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 7, 29, 19, 56, 56, 496371, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/python_operator_v1/runs/scheduled__2023-06-24T11%3A25%3A00%2B00%3A00/tasks/python?try_number=1'),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.079686Z","level":"info","event":" 'task_instance_key_str': 'python_operator_v1__python__20230624',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.079756Z","level":"info","event":" 'task_reschedule_count': 0,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.079806Z","level":"info","event":" 'templates_dict': None,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.079900Z","level":"info","event":" 'ti': RuntimeTaskInstance(id=UUID('019857c2-6b86-70f0-8021-fae4762beb8e'), task_id='python', dag_id='python_operator_v1', run_id='scheduled__2023-06-24T11:25:00+00:00', try_number=1, map_index=-1, hostname='bf6f1e7a6f11', context_carrier={}, task=<Task(PythonOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 7, 29, 19, 56, 56, 496371, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/python_operator_v1/runs/scheduled__2023-06-24T11%3A25%3A00%2B00%3A00/tasks/python?try_number=1'),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.080021Z","level":"info","event":" 'triggering_asset_events': TriggeringAssetEventsAccessor(_events=defaultdict(<class 'list'>, {})),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.080124Z","level":"info","event":" 'ts': '2023-06-24T11:25:00+00:00',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.080170Z","level":"info","event":" 'ts_nodash': '20230624T112500',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.080214Z","level":"info","event":" 'ts_nodash_with_tz': '20230624T112500+0000',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.080255Z","level":"info","event":" 'var': {'json': <VariableAccessor (dynamic access)>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.080296Z","level":"info","event":"         'value': <VariableAccessor (dynamic access)>}}","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.079947","level":"info","event":"Done. Returned value was: 123","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-29T19:56:57.080272","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('019857c2-6b86-70f0-8021-fae4762beb8e'), task_id='python', dag_id='python_operator_v1', run_id='scheduled__2023-06-24T11:25:00+00:00', try_number=1, map_index=-1, hostname='bf6f1e7a6f11', context_carrier={}, task=<Task(PythonOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 7, 29, 19, 56, 56, 496371, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/python_operator_v1/runs/scheduled__2023-06-24T11%3A25%3A00%2B00%3A00/tasks/python?try_number=1')","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.108218Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.108360Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:56:57.108467Z","level":"info","event":"Task operator:<Task(PythonOperator): python>","chan":"stdout","logger":"task"}
