{"timestamp":"2025-07-29T19:31:35.663710","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-29T19:31:35.664282","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/python_operator_v1.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-29T19:31:35.702039Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.702335Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.703523Z","level":"info","event":"Current task name:python","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.703712Z","level":"info","event":"Dag name:python_operator_v1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.705086Z","level":"info","event":"poliana","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.706097Z","level":"info","event":"{'conn': <ConnectionAccessor (dynamic access)>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.706314Z","level":"info","event":" 'dag': <DAG: python_operator_v1>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.706524Z","level":"info","event":" 'dag_run': DagRun(dag_id='python_operator_v1', run_id='scheduled__2023-06-23T07:51:00+00:00', logical_date=datetime.datetime(2023, 6, 23, 7, 51, tzinfo=datetime.timezone.utc), data_interval_start=datetime.datetime(2023, 6, 23, 7, 51, tzinfo=datetime.timezone.utc), data_interval_end=datetime.datetime(2023, 6, 23, 7, 51, tzinfo=datetime.timezone.utc), run_after=datetime.datetime(2023, 6, 23, 7, 51, tzinfo=datetime.timezone.utc), start_date=datetime.datetime(2025, 7, 29, 19, 31, 34, 515059, tzinfo=datetime.timezone.utc), end_date=None, clear_number=0, run_type=<DagRunType.SCHEDULED: 'scheduled'>, conf={}, consumed_asset_events=[]),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.706678Z","level":"info","event":" 'data_interval_end': DateTime(2023, 6, 23, 7, 51, 0, tzinfo=Timezone('UTC')),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.706758Z","level":"info","event":" 'data_interval_start': DateTime(2023, 6, 23, 7, 51, 0, tzinfo=Timezone('UTC')),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.706824Z","level":"info","event":" 'ds': '2023-06-23',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.706895Z","level":"info","event":" 'ds_nodash': '20230623',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.706960Z","level":"info","event":" 'inlet_events': InletEventsAccessors(_inlets=[], _assets={}, _asset_aliases={}),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.707025Z","level":"info","event":" 'inlets': [],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.707091Z","level":"info","event":" 'logical_date': DateTime(2023, 6, 23, 7, 51, 0, tzinfo=Timezone('UTC')),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.707156Z","level":"info","event":" 'macros': <MacrosAccessor (dynamic access to macros)>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.707219Z","level":"info","event":" 'map_index_template': None,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.707306Z","level":"info","event":" 'outlet_events': <airflow.sdk.execution_time.context.OutletEventAccessors object at 0x7fb67b5afa70>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.707378Z","level":"info","event":" 'outlets': [],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.707442Z","level":"info","event":" 'params': {},","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.718899Z","level":"info","event":" 'prev_data_interval_end_success': <Proxy at 0x7fb66fc72b70 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x7fb66fca5120>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.719122Z","level":"info","event":" 'prev_data_interval_start_success': <Proxy at 0x7fb66fc72c00 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x7fb66fc8bf60>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.719233Z","level":"info","event":" 'prev_end_date_success': <Proxy at 0x7fb6785efe30 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x7fb66fc8b920>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.719307Z","level":"info","event":" 'prev_start_date_success': <Proxy at 0x7fb66fc71730 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x7fb66fc8be20>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.719372Z","level":"info","event":" 'run_id': 'scheduled__2023-06-23T07:51:00+00:00',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.719436Z","level":"info","event":" 'task': <Task(PythonOperator): python>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.719505Z","level":"info","event":" 'task_instance': RuntimeTaskInstance(id=UUID('019857ab-33e6-70bc-99d0-88df52108120'), task_id='python', dag_id='python_operator_v1', run_id='scheduled__2023-06-23T07:51:00+00:00', try_number=1, map_index=-1, hostname='bf6f1e7a6f11', context_carrier={}, task=<Task(PythonOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 7, 29, 19, 31, 35, 31241, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/python_operator_v1/runs/scheduled__2023-06-23T07%3A51%3A00%2B00%3A00/tasks/python?try_number=1'),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.719573Z","level":"info","event":" 'task_instance_key_str': 'python_operator_v1__python__20230623',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.719635Z","level":"info","event":" 'task_reschedule_count': 0,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.719697Z","level":"info","event":" 'templates_dict': None,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.719760Z","level":"info","event":" 'ti': RuntimeTaskInstance(id=UUID('019857ab-33e6-70bc-99d0-88df52108120'), task_id='python', dag_id='python_operator_v1', run_id='scheduled__2023-06-23T07:51:00+00:00', try_number=1, map_index=-1, hostname='bf6f1e7a6f11', context_carrier={}, task=<Task(PythonOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 7, 29, 19, 31, 35, 31241, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/python_operator_v1/runs/scheduled__2023-06-23T07%3A51%3A00%2B00%3A00/tasks/python?try_number=1'),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.719842Z","level":"info","event":" 'triggering_asset_events': TriggeringAssetEventsAccessor(_events=defaultdict(<class 'list'>, {})),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.719912Z","level":"info","event":" 'ts': '2023-06-23T07:51:00+00:00',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.719973Z","level":"info","event":" 'ts_nodash': '20230623T075100',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.720034Z","level":"info","event":" 'ts_nodash_with_tz': '20230623T075100+0000',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.720150Z","level":"info","event":" 'var': {'json': <VariableAccessor (dynamic access)>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.720223Z","level":"info","event":"         'value': <VariableAccessor (dynamic access)>}}","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.719643","level":"info","event":"Done. Returned value was: 123","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-29T19:31:35.719855","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('019857ab-33e6-70bc-99d0-88df52108120'), task_id='python', dag_id='python_operator_v1', run_id='scheduled__2023-06-23T07:51:00+00:00', try_number=1, map_index=-1, hostname='bf6f1e7a6f11', context_carrier={}, task=<Task(PythonOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 7, 29, 19, 31, 35, 31241, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/python_operator_v1/runs/scheduled__2023-06-23T07%3A51%3A00%2B00%3A00/tasks/python?try_number=1')","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.743029Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.743186Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:31:35.743416Z","level":"info","event":"Task operator:<Task(PythonOperator): python>","chan":"stdout","logger":"task"}
