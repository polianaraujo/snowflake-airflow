{"timestamp":"2025-07-29T19:47:32.996179","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-29T19:47:32.996976","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/python_operator_v1.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-29T19:47:33.026350Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.026646Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.027237Z","level":"info","event":"Current task name:python","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.027356Z","level":"info","event":"Dag name:python_operator_v1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.028613Z","level":"info","event":"poliana","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.029634Z","level":"info","event":"{'conn': <ConnectionAccessor (dynamic access)>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.029770Z","level":"info","event":" 'dag': <DAG: python_operator_v1>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.029879Z","level":"info","event":" 'dag_run': DagRun(dag_id='python_operator_v1', run_id='scheduled__2023-06-24T01:35:00+00:00', logical_date=datetime.datetime(2023, 6, 24, 1, 35, tzinfo=datetime.timezone.utc), data_interval_start=datetime.datetime(2023, 6, 24, 1, 35, tzinfo=datetime.timezone.utc), data_interval_end=datetime.datetime(2023, 6, 24, 1, 35, tzinfo=datetime.timezone.utc), run_after=datetime.datetime(2023, 6, 24, 1, 35, tzinfo=datetime.timezone.utc), start_date=datetime.datetime(2025, 7, 29, 19, 47, 32, 6445, tzinfo=datetime.timezone.utc), end_date=None, clear_number=0, run_type=<DagRunType.SCHEDULED: 'scheduled'>, conf={}, consumed_asset_events=[]),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.029937Z","level":"info","event":" 'data_interval_end': DateTime(2023, 6, 24, 1, 35, 0, tzinfo=Timezone('UTC')),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.029984Z","level":"info","event":" 'data_interval_start': DateTime(2023, 6, 24, 1, 35, 0, tzinfo=Timezone('UTC')),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.030027Z","level":"info","event":" 'ds': '2023-06-24',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.030096Z","level":"info","event":" 'ds_nodash': '20230624',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.030143Z","level":"info","event":" 'inlet_events': InletEventsAccessors(_inlets=[], _assets={}, _asset_aliases={}),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.030185Z","level":"info","event":" 'inlets': [],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.030226Z","level":"info","event":" 'logical_date': DateTime(2023, 6, 24, 1, 35, 0, tzinfo=Timezone('UTC')),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.030267Z","level":"info","event":" 'macros': <MacrosAccessor (dynamic access to macros)>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.030307Z","level":"info","event":" 'map_index_template': None,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.030347Z","level":"info","event":" 'outlet_events': <airflow.sdk.execution_time.context.OutletEventAccessors object at 0x7fb66fd1fa70>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.030388Z","level":"info","event":" 'outlets': [],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.030428Z","level":"info","event":" 'params': {},","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.047086Z","level":"info","event":" 'prev_data_interval_end_success': <Proxy at 0x7fb66fc5acf0 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x7fb66fc760c0>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.047286Z","level":"info","event":" 'prev_data_interval_start_success': <Proxy at 0x7fb66fc5ab10 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x7fb66fc777e0>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.047363Z","level":"info","event":" 'prev_end_date_success': <Proxy at 0x7fb66fc5b020 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x7fb66fc77880>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.047432Z","level":"info","event":" 'prev_start_date_success': <Proxy at 0x7fb66fc5aab0 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x7fb66fc765c0>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.047490Z","level":"info","event":" 'run_id': 'scheduled__2023-06-24T01:35:00+00:00',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.047535Z","level":"info","event":" 'task': <Task(PythonOperator): python>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.047580Z","level":"info","event":" 'task_instance': RuntimeTaskInstance(id=UUID('019857b9-d019-7491-a87b-5338f6dd83d5'), task_id='python', dag_id='python_operator_v1', run_id='scheduled__2023-06-24T01:35:00+00:00', try_number=1, map_index=-1, hostname='bf6f1e7a6f11', context_carrier={}, task=<Task(PythonOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 7, 29, 19, 47, 32, 332222, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/python_operator_v1/runs/scheduled__2023-06-24T01%3A35%3A00%2B00%3A00/tasks/python?try_number=1'),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.047628Z","level":"info","event":" 'task_instance_key_str': 'python_operator_v1__python__20230624',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.047669Z","level":"info","event":" 'task_reschedule_count': 0,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.047710Z","level":"info","event":" 'templates_dict': None,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.047751Z","level":"info","event":" 'ti': RuntimeTaskInstance(id=UUID('019857b9-d019-7491-a87b-5338f6dd83d5'), task_id='python', dag_id='python_operator_v1', run_id='scheduled__2023-06-24T01:35:00+00:00', try_number=1, map_index=-1, hostname='bf6f1e7a6f11', context_carrier={}, task=<Task(PythonOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 7, 29, 19, 47, 32, 332222, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/python_operator_v1/runs/scheduled__2023-06-24T01%3A35%3A00%2B00%3A00/tasks/python?try_number=1'),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.047821Z","level":"info","event":" 'triggering_asset_events': TriggeringAssetEventsAccessor(_events=defaultdict(<class 'list'>, {})),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.047868Z","level":"info","event":" 'ts': '2023-06-24T01:35:00+00:00',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.047910Z","level":"info","event":" 'ts_nodash': '20230624T013500',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.047953Z","level":"info","event":" 'ts_nodash_with_tz': '20230624T013500+0000',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.047994Z","level":"info","event":" 'var': {'json': <VariableAccessor (dynamic access)>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.048035Z","level":"info","event":"         'value': <VariableAccessor (dynamic access)>}}","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.047792","level":"info","event":"Done. Returned value was: 123","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-29T19:47:33.047969","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('019857b9-d019-7491-a87b-5338f6dd83d5'), task_id='python', dag_id='python_operator_v1', run_id='scheduled__2023-06-24T01:35:00+00:00', try_number=1, map_index=-1, hostname='bf6f1e7a6f11', context_carrier={}, task=<Task(PythonOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 7, 29, 19, 47, 32, 332222, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/python_operator_v1/runs/scheduled__2023-06-24T01%3A35%3A00%2B00%3A00/tasks/python?try_number=1')","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.072954Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.073090Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T19:47:33.073184Z","level":"info","event":"Task operator:<Task(PythonOperator): python>","chan":"stdout","logger":"task"}
