{"timestamp":"2025-07-29T20:08:59.962337","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-29T20:08:59.963139","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/2_python_operator_v1.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-29T20:08:59.996487Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:08:59.996737Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:08:59.997207Z","level":"info","event":"Current task name:python","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:08:59.997338Z","level":"info","event":"Dag name:python_operator_v1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:08:59.998927Z","level":"info","event":"poliana","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.010851Z","level":"info","event":"{'conn': <ConnectionAccessor (dynamic access)>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.011013Z","level":"info","event":" 'dag': <DAG: python_operator_v1>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.011134Z","level":"info","event":" 'dag_run': DagRun(dag_id='python_operator_v1', run_id='scheduled__2023-06-24T22:25:00+00:00', logical_date=datetime.datetime(2023, 6, 24, 22, 25, tzinfo=datetime.timezone.utc), data_interval_start=datetime.datetime(2023, 6, 24, 22, 25, tzinfo=datetime.timezone.utc), data_interval_end=datetime.datetime(2023, 6, 24, 22, 25, tzinfo=datetime.timezone.utc), run_after=datetime.datetime(2023, 6, 24, 22, 25, tzinfo=datetime.timezone.utc), start_date=datetime.datetime(2025, 7, 29, 20, 8, 58, 799982, tzinfo=datetime.timezone.utc), end_date=None, clear_number=0, run_type=<DagRunType.SCHEDULED: 'scheduled'>, conf={}, consumed_asset_events=[]),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.011201Z","level":"info","event":" 'data_interval_end': DateTime(2023, 6, 24, 22, 25, 0, tzinfo=Timezone('UTC')),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.011247Z","level":"info","event":" 'data_interval_start': DateTime(2023, 6, 24, 22, 25, 0, tzinfo=Timezone('UTC')),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.011291Z","level":"info","event":" 'ds': '2023-06-24',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.011332Z","level":"info","event":" 'ds_nodash': '20230624',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.011374Z","level":"info","event":" 'inlet_events': InletEventsAccessors(_inlets=[], _assets={}, _asset_aliases={}),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.011416Z","level":"info","event":" 'inlets': [],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.011458Z","level":"info","event":" 'logical_date': DateTime(2023, 6, 24, 22, 25, 0, tzinfo=Timezone('UTC')),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.011498Z","level":"info","event":" 'macros': <MacrosAccessor (dynamic access to macros)>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.011539Z","level":"info","event":" 'map_index_template': None,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.011580Z","level":"info","event":" 'outlet_events': <airflow.sdk.execution_time.context.OutletEventAccessors object at 0x7fb66fe57a70>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.011622Z","level":"info","event":" 'outlets': [],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.011662Z","level":"info","event":" 'params': {},","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.026228Z","level":"info","event":" 'prev_data_interval_end_success': <Proxy at 0x7fb66fc9a090 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x7fb66fcb8d60>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.026468Z","level":"info","event":" 'prev_data_interval_start_success': <Proxy at 0x7fb66fd95c70 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x7fb66fcba480>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.026654Z","level":"info","event":" 'prev_end_date_success': <Proxy at 0x7fb66fc99fa0 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x7fb66fcba520>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.026746Z","level":"info","event":" 'prev_start_date_success': <Proxy at 0x7fb66fc6daf0 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x7fb66fcb9260>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.026828Z","level":"info","event":" 'run_id': 'scheduled__2023-06-24T22:25:00+00:00',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.026908Z","level":"info","event":" 'task': <Task(PythonOperator): python>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.026992Z","level":"info","event":" 'task_instance': RuntimeTaskInstance(id=UUID('019857cd-7295-71d7-b650-3c1be3dbea2e'), task_id='python', dag_id='python_operator_v1', run_id='scheduled__2023-06-24T22:25:00+00:00', try_number=1, map_index=-1, hostname='bf6f1e7a6f11', context_carrier={}, task=<Task(PythonOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 7, 29, 20, 8, 59, 313829, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/python_operator_v1/runs/scheduled__2023-06-24T22%3A25%3A00%2B00%3A00/tasks/python?try_number=1'),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.027085Z","level":"info","event":" 'task_instance_key_str': 'python_operator_v1__python__20230624',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.027163Z","level":"info","event":" 'task_reschedule_count': 0,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.027232Z","level":"info","event":" 'templates_dict': None,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.027318Z","level":"info","event":" 'ti': RuntimeTaskInstance(id=UUID('019857cd-7295-71d7-b650-3c1be3dbea2e'), task_id='python', dag_id='python_operator_v1', run_id='scheduled__2023-06-24T22:25:00+00:00', try_number=1, map_index=-1, hostname='bf6f1e7a6f11', context_carrier={}, task=<Task(PythonOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 7, 29, 20, 8, 59, 313829, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/python_operator_v1/runs/scheduled__2023-06-24T22%3A25%3A00%2B00%3A00/tasks/python?try_number=1'),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.027403Z","level":"info","event":" 'triggering_asset_events': TriggeringAssetEventsAccessor(_events=defaultdict(<class 'list'>, {})),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.027479Z","level":"info","event":" 'ts': '2023-06-24T22:25:00+00:00',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.027584Z","level":"info","event":" 'ts_nodash': '20230624T222500',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.027663Z","level":"info","event":" 'ts_nodash_with_tz': '20230624T222500+0000',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.027736Z","level":"info","event":" 'var': {'json': <VariableAccessor (dynamic access)>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.027811Z","level":"info","event":"         'value': <VariableAccessor (dynamic access)>}}","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.027354","level":"info","event":"Done. Returned value was: 123","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-29T20:09:00.027623","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('019857cd-7295-71d7-b650-3c1be3dbea2e'), task_id='python', dag_id='python_operator_v1', run_id='scheduled__2023-06-24T22:25:00+00:00', try_number=1, map_index=-1, hostname='bf6f1e7a6f11', context_carrier={}, task=<Task(PythonOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 7, 29, 20, 8, 59, 313829, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/python_operator_v1/runs/scheduled__2023-06-24T22%3A25%3A00%2B00%3A00/tasks/python?try_number=1')","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.071586Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.072029Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:09:00.072240Z","level":"info","event":"Task operator:<Task(PythonOperator): python>","chan":"stdout","logger":"task"}
