{"timestamp":"2025-07-29T20:04:44.892420","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-07-29T20:04:44.893213","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/2_python_operator_v1.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-07-29T20:04:44.927822Z","level":"info","event":"Task instance is in running state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.928164Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.929519Z","level":"info","event":"Current task name:python","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.929691Z","level":"info","event":"Dag name:python_operator_v1","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.931973Z","level":"info","event":"poliana","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.932652Z","level":"info","event":"{'conn': <ConnectionAccessor (dynamic access)>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.932988Z","level":"info","event":" 'dag': <DAG: python_operator_v1>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.933299Z","level":"info","event":" 'dag_run': DagRun(dag_id='python_operator_v1', run_id='scheduled__2023-06-24T18:46:00+00:00', logical_date=datetime.datetime(2023, 6, 24, 18, 46, tzinfo=datetime.timezone.utc), data_interval_start=datetime.datetime(2023, 6, 24, 18, 46, tzinfo=datetime.timezone.utc), data_interval_end=datetime.datetime(2023, 6, 24, 18, 46, tzinfo=datetime.timezone.utc), run_after=datetime.datetime(2023, 6, 24, 18, 46, tzinfo=datetime.timezone.utc), start_date=datetime.datetime(2025, 7, 29, 20, 4, 43, 785735, tzinfo=datetime.timezone.utc), end_date=None, clear_number=0, run_type=<DagRunType.SCHEDULED: 'scheduled'>, conf={}, consumed_asset_events=[]),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.933434Z","level":"info","event":" 'data_interval_end': DateTime(2023, 6, 24, 18, 46, 0, tzinfo=Timezone('UTC')),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.933504Z","level":"info","event":" 'data_interval_start': DateTime(2023, 6, 24, 18, 46, 0, tzinfo=Timezone('UTC')),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.933552Z","level":"info","event":" 'ds': '2023-06-24',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.933596Z","level":"info","event":" 'ds_nodash': '20230624',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.933637Z","level":"info","event":" 'inlet_events': InletEventsAccessors(_inlets=[], _assets={}, _asset_aliases={}),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.933681Z","level":"info","event":" 'inlets': [],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.933740Z","level":"info","event":" 'logical_date': DateTime(2023, 6, 24, 18, 46, 0, tzinfo=Timezone('UTC')),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.933809Z","level":"info","event":" 'macros': <MacrosAccessor (dynamic access to macros)>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.933868Z","level":"info","event":" 'map_index_template': None,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.933940Z","level":"info","event":" 'outlet_events': <airflow.sdk.execution_time.context.OutletEventAccessors object at 0x7fb66fc82990>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.934066Z","level":"info","event":" 'outlets': [],","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.934172Z","level":"info","event":" 'params': {},","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.955401Z","level":"info","event":" 'prev_data_interval_end_success': <Proxy at 0x7fb66fc9c680 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x7fb66fcac180>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.955607Z","level":"info","event":" 'prev_data_interval_start_success': <Proxy at 0x7fb66fc9c5f0 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x7fb66fcad8a0>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.955697Z","level":"info","event":" 'prev_end_date_success': <Proxy at 0x7fb677f4f590 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x7fb66fcad940>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.955773Z","level":"info","event":" 'prev_start_date_success': <Proxy at 0x7fb67cb92720 with factory <function RuntimeTaskInstance.get_template_context.<locals>.<lambda> at 0x7fb66fcac680>>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.955841Z","level":"info","event":" 'run_id': 'scheduled__2023-06-24T18:46:00+00:00',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.955888Z","level":"info","event":" 'task': <Task(PythonOperator): python>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.955950Z","level":"info","event":" 'task_instance': RuntimeTaskInstance(id=UUID('019857c9-8e67-7b1b-9e40-6825b1cba7dd'), task_id='python', dag_id='python_operator_v1', run_id='scheduled__2023-06-24T18:46:00+00:00', try_number=1, map_index=-1, hostname='bf6f1e7a6f11', context_carrier={}, task=<Task(PythonOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 7, 29, 20, 4, 44, 304707, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/python_operator_v1/runs/scheduled__2023-06-24T18%3A46%3A00%2B00%3A00/tasks/python?try_number=1'),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.956001Z","level":"info","event":" 'task_instance_key_str': 'python_operator_v1__python__20230624',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.956044Z","level":"info","event":" 'task_reschedule_count': 0,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.956085Z","level":"info","event":" 'templates_dict': None,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.956155Z","level":"info","event":" 'ti': RuntimeTaskInstance(id=UUID('019857c9-8e67-7b1b-9e40-6825b1cba7dd'), task_id='python', dag_id='python_operator_v1', run_id='scheduled__2023-06-24T18:46:00+00:00', try_number=1, map_index=-1, hostname='bf6f1e7a6f11', context_carrier={}, task=<Task(PythonOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 7, 29, 20, 4, 44, 304707, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/python_operator_v1/runs/scheduled__2023-06-24T18%3A46%3A00%2B00%3A00/tasks/python?try_number=1'),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.956229Z","level":"info","event":" 'triggering_asset_events': TriggeringAssetEventsAccessor(_events=defaultdict(<class 'list'>, {})),","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.956297Z","level":"info","event":" 'ts': '2023-06-24T18:46:00+00:00',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.956433Z","level":"info","event":" 'ts_nodash': '20230624T184600',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.956512Z","level":"info","event":" 'ts_nodash_with_tz': '20230624T184600+0000',","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.956592Z","level":"info","event":" 'var': {'json': <VariableAccessor (dynamic access)>,","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.956672Z","level":"info","event":"         'value': <VariableAccessor (dynamic access)>}}","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:44.957731","level":"info","event":"Done. Returned value was: 123","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-07-29T20:04:44.958204","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('019857c9-8e67-7b1b-9e40-6825b1cba7dd'), task_id='python', dag_id='python_operator_v1', run_id='scheduled__2023-06-24T18:46:00+00:00', try_number=1, map_index=-1, hostname='bf6f1e7a6f11', context_carrier={}, task=<Task(PythonOperator): python>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=0, start_date=datetime.datetime(2025, 7, 29, 20, 4, 44, 304707, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None, log_url='http://localhost:8080/dags/python_operator_v1/runs/scheduled__2023-06-24T18%3A46%3A00%2B00%3A00/tasks/python?try_number=1')","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.002710Z","level":"info","event":"Task instance in success state","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.002915Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","chan":"stdout","logger":"task"}
{"timestamp":"2025-07-29T20:04:45.003206Z","level":"info","event":"Task operator:<Task(PythonOperator): python>","chan":"stdout","logger":"task"}
